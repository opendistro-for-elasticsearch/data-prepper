apply from: file("${rootDir}/build-resources.gradle")
allprojects {
    group = 'com.amazon'
    version = '1.0.2'
    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    sourceCompatibility = '1.8'
    dependencies {
        implementation "com.google.guava:guava:29.0-jre"
        implementation 'org.apache.logging.log4j:log4j-core:2.16.0'
        implementation "org.slf4j:slf4j-api:1.7.30"
        implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.16.0'
        testImplementation("junit:junit:4.13") {
            exclude group: 'org.hamcrest' // workaround for jarHell
        }
        constraints {
            implementation('org.apache.logging.log4j:log4j-core') {
                version {
                    require '2.16.0'
                }
                because 'Log4j 2.16.0 fixes CVE-2021-44228 and CVE-2021-45046'
            }
        }
        implementation('org.apache.logging.log4j:log4j-api') {
            version {
                require '2.16.0'
            }
            because 'the build fails if the Log4j API is not update along with log4j-core'
        }
    }
    build.dependsOn test
    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
    }

    task allDeps(type: DependencyReportTask) {}
}

configure(coreProjects) {
    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
        reports {
            xml.enabled false
            csv.enabled false
            html.destination file("${buildDir}/reports/jacocoHtml")
        }
    }
    test {
        useJUnit()
        finalizedBy jacocoTestReport // report is always generated after tests run
    }
    jacocoTestCoverageVerification {
        dependsOn jacocoTestReport
        violationRules {
            rule {
                limit {
                    minimum = 0.65 //TODO increase this to 0.75
                }
            }
        }
    }
    check.dependsOn jacocoTestCoverageVerification
}